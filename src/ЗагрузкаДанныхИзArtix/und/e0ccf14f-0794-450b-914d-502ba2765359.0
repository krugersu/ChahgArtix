{4,
{49,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,1,0},
{0},1,
{22,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},1,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"ЗагрузитьКассовыеСмены",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗагрузитьКассовыеСменыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0,0,0,1,0},"","",1,
{22,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{12,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0,0,0,
{49,0}
},"
&НаСервере
Процедура ЗагрузитьКассовыеСменыНаСервере()
	
	//1. В начале отрабатываем изменения по текущим сменам, который уже есть в 1С
	
	// Получаем список всех не закрытых смен в 1С, в норме все смены кроме текущего и прошлого дня должны
	// быть закрыты
	СписокНеЗакрытыхКассовыхСмен = ПолучитьСписокНеЗакрытыхКассовыхСменВ1С();
	
	// Для каждой не закрытой смены делаем запрос к кассовому серверу и анализируем закрылась ли смена, если
	// да , то закрываем смену в 1С (возможно в будущем переделать запрос, что бы получать все смены одним запросом
	// используя в качестве параметра список номеров смен - СписокНеЗакрытыхКассовыхСмен)
	 Для Каждого тСтрока из СписокНеЗакрытыхКассовыхСмен Цикл
	
	// Запрос на получение кассовой смены по номеру
	ЗапросКассоваяСменаПоНомеру = Новый Запрос;
	ЗапросКассоваяСменаПоНомеру.Текст = ВернутьТекстЗапросаКассоаяСменаПоНомеру();
	ЗапросКассоваяСменаПоНомеру.УстановитьПараметр(""shiftnum"", тСтрока.Значение);
	РезультатКассоваяСмена = ЗапросКассоваяСменаПоНомеру.Выполнить().Выгрузить();
	// Если смена закрыта в кассовом сервере, то закрываем ее в 1С
	Если НЕ РезультатКассоваяСмена.Количество() = 0 Тогда
		   ЗакрытьКассовуюСмену(РезультатКассоваяСмена);
	КонецЕсли; 
	
КонецЦикла;


	//2. Затем обрабатываем получение новых смен из кассового сервера 

	// Получаем дату первой незакрытой смены в 1С, для того что бы ограничить период запроса в кассовом сервере
	shiftnum = 14;
	ДатаПервойНеЗакрытойСмены = Неопределено;
	ДатаПервойНеЗакрытойСмены = ПолучитьДатуПервойНеЗакрытойСмены();
	Если ДатаПервойНеЗакрытойСмены = Неопределено Тогда
		ДатаПервойНеЗакрытойСмены = НачалоДня(ТекущаяДата());
	КонецЕсли;
	
	// Запрос на получение всех кассовых смен с определенной даты
	ЗапросКассовыеСмены = Новый Запрос;
	ЗапросКассовыеСмены.Текст = ВернутьТекстЗапросаКассовыеСмены();
	ЗапросКассовыеСмены.УстановитьПараметр(""time_beg"", ДатаПервойНеЗакрытойСмены);
	Результат = ЗапросКассовыеСмены.Выполнить().Выгрузить();


	// Функция по созданию и открытию документов Кассовая смена в 1С
	//МассивКассовыеСмены = ОткрытьКассовуюСмену(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКассовыеСмены(Команда)
	ЗагрузитьКассовыеСменыНаСервере();
КонецПроцедуры



// Формирует запрос по кассовым сменам
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ВернутьТекстЗапросаКассовыеСмены()
		
		ТекстЗапроса = 
		""ВЫБРАТЬ
		|	workshift.workshiftid КАК workshiftid,
		|	workshift.storeId КАК storeId,
		|	workshift.shiftnum КАК shiftnum,
		|	workshift.cashcode КАК cashcode,
		|	workshift.cashId КАК cashId,
		|	workshift.scode КАК scode,
		|	workshift.time_beg КАК time_beg,
		|	workshift.time_end КАК time_end,
		|	workshift.checknum1 КАК checknum1,
		|	workshift.checknum2 КАК checknum2,
		|	workshift.vb КАК vb,
		|	workshift.vn КАК vn,
		|	workshift.ve КАК ve,
		|	workshift.mode1 КАК mode1,
		|	workshift.mode2 КАК mode2,
		|	workshift.arcpath КАК arcpath,
		|	workshift.shifttype КАК shifttype,
		|	workshift.dateincrement КАК dateincrement,
		|	workshift.shopcode КАК shopcode,
		|	workshift.changed КАК changed,
		|	workshift.sumSale КАК sumSale,
		|	workshift.sumGain КАК sumGain,
		|	workshift.sumDrawer КАК sumDrawer,
		|	workshift.version КАК version,
		|	workshift.postype КАК postype,
		|	workshift.revision КАК revision,
		|	workshift.firstchecktime КАК firstchecktime,
		|	workshift.update_time КАК update_time,
		|	workshift.sumsalecash КАК sumsalecash,
		|	workshift.sumsalenoncash КАК sumsalenoncash,
		|	workshift.sumsaleother КАК sumsaleother,
		|	workshift.sumgaincash КАК sumgaincash,
		|	workshift.sumgainnoncash КАК sumgainnoncash,
		|	workshift.sumrefund КАК sumrefund,
		|	workshift.sumrefundcash КАК sumrefundcash,
		|	workshift.sumrefundnoncash КАК sumrefundnoncash,
		|	workshift.countsale КАК countsale,
		|	workshift.countrefund КАК countrefund
		|ИЗ
		|	ВнешнийИсточникДанных.КассовыйСервер.Таблица.workshift КАК workshift
		|ГДЕ
	//	|	workshift.shiftnum = &shiftnum
		|	 workshift.time_beg > &time_beg"";
	
	//Запрос.УстановитьПараметр(""shiftnum"", shiftnum);

	
	Возврат ТекстЗапроса;
	
КонецФункции // ВернутьТекстЗапросаКассовыеСмены()
 

// Формирует запрос по кассовой смене по номеру
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ВернутьТекстЗапросаКассоаяСменаПоНомеру()
		
		ТекстЗапроса = 
		""ВЫБРАТЬ
		|	workshift.workshiftid КАК workshiftid,
		|	workshift.storeId КАК storeId,
		|	workshift.shiftnum КАК shiftnum,
		|	workshift.cashcode КАК cashcode,
		|	workshift.cashId КАК cashId,
		|	workshift.scode КАК scode,
		|	workshift.time_beg КАК time_beg,
		|	workshift.time_end КАК time_end,
		|	workshift.checknum1 КАК checknum1,
		|	workshift.checknum2 КАК checknum2,
		|	workshift.vb КАК vb,
		|	workshift.vn КАК vn,
		|	workshift.ve КАК ve,
		|	workshift.mode1 КАК mode1,
		|	workshift.mode2 КАК mode2,
		|	workshift.arcpath КАК arcpath,
		|	workshift.shifttype КАК shifttype,
		|	workshift.dateincrement КАК dateincrement,
		|	workshift.shopcode КАК shopcode,
		|	workshift.changed КАК changed,
		|	workshift.sumSale КАК sumSale,
		|	workshift.sumGain КАК sumGain,
		|	workshift.sumDrawer КАК sumDrawer,
		|	workshift.version КАК version,
		|	workshift.postype КАК postype,
		|	workshift.revision КАК revision,
		|	workshift.firstchecktime КАК firstchecktime,
		|	workshift.update_time КАК update_time,
		|	workshift.sumsalecash КАК sumsalecash,
		|	workshift.sumsalenoncash КАК sumsalenoncash,
		|	workshift.sumsaleother КАК sumsaleother,
		|	workshift.sumgaincash КАК sumgaincash,
		|	workshift.sumgainnoncash КАК sumgainnoncash,
		|	workshift.sumrefund КАК sumrefund,
		|	workshift.sumrefundcash КАК sumrefundcash,
		|	workshift.sumrefundnoncash КАК sumrefundnoncash,
		|	workshift.countsale КАК countsale,
		|	workshift.countrefund КАК countrefund
		|ИЗ
		|	ВнешнийИсточникДанных.КассовыйСервер.Таблица.workshift КАК workshift
		|ГДЕ
		|	workshift.shiftnum = &shiftnum
		|	И НЕ workshift.time_end ЕСТЬ NULL"";
	
	//Запрос.УстановитьПараметр(""shiftnum"", shiftnum);

	
	Возврат ТекстЗапроса;
	
КонецФункции // ВернутьТекстЗапросаКассовыеСмены()



Функция ОткрытьКассовуюСмену(Результат)
	
	СсылкаНаКассовуюСмену = Документы.КассоваяСмена.ПустаяСсылка();
	
	МассивДокументовКассоваяСмена = Новый Массив; 
	 
	Для каждого тСтрока Из Результат Цикл
		
		Если НЕ ПроверитьНаличиеКассовойСмены(тСтрока.shiftnum, тСтрока.cashcode,тСтрока.shopcode) Тогда
	
		 СсылкаНаКассовуюСмену = Документы.КассоваяСмена.СоздатьДокумент();
		 СсылкаНаКассовуюСмену.Дата = тСтрока.time_beg;
		 СсылкаНаКассовуюСмену.ДатаСменыККТ  = тСтрока.time_beg;
		 СсылкаНаКассовуюСмену.НомерСменыККТ = тСтрока.shiftnum;
		 СсылкаНаКассовуюСмену.НачалоКассовойСмены = тСтрока.time_beg;
		 //СсылкаНаКассовуюСмену.Статус = Перечисления.СтатусыКассовойСмены.Открыта;
		 СсылкаНаКассовуюСмену.Статус = Перечисления.СтатусыКассовойСмены.Закрыта;
		 
		 СсылкаНаКассовуюСмену.ФискальноеУстройство = Справочники.ПодключаемоеОборудование.НайтиПоНаименованию(""'ШТРИХ-М:ККТ с передачей данных в ОФД (ФФД 1.2)' на <<Пользователь>>(gg51-54-cu)"");

		 СсылкаНаКассовуюСмену.КоличествоЧеков = тСтрока.countsale + тСтрока.countrefund;
		 
		 СсылкаНаКассовуюСмену.ОкончаниеКассовойСмены = тСтрока.time_end;  // Перенести в закрытие смены
		 
		 Попытка
		 СсылкаНаКассовуюСмену.Записать(РежимЗаписиДокумента.Проведение);
	 Исключение
		 КонецПопытки;
		 
	      МассивДокументовКассоваяСмена.Добавить(СсылкаНаКассовуюСмену);
		  КонецЕсли;
	КонецЦикла;  
	 
	
	
	Возврат СсылкаНаКассовуюСмену;
КонецФункции	


// Проверяет существует ли документ кассовая сманеа по этой кассе за текущее время
Функция ПроверитьНаличиеКассовойСмены(НомерСмены,Касса,Магазин)
	
	
	
	Возврат Ложь;
КонецФункции	


// Возвращает дату первой незакрытой смены в 1С, для ограничения выборки из Кассового сервера
//
// Возвращаемое значение:
//   Дата или Неопределено - Дата первого незакрытого документа Кассовая смена или НЕопределено если таковой не найдено
Функция ПолучитьДатуПервойНеЗакрытойСмены()
	
	Статус = Перечисления.СтатусыКассовойСмены.Открыта;
	РезультатДата = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		""ВЫБРАТЬ ПЕРВЫЕ 1
		|	КассоваяСмена.Ссылка КАК Ссылка,
		|	КассоваяСмена.Дата КАК Дата
		|ИЗ
		|	Документ.КассоваяСмена КАК КассоваяСмена
		|ГДЕ
		|	КассоваяСмена.Статус = &Статус
		|
		|УПОРЯДОЧИТЬ ПО
		|	КассоваяСмена.Дата"";
	
	Запрос.УстановитьПараметр(""Статус"", Статус);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		РезультатДата = ВыборкаДетальныеЗаписи.Дата;
	КонецЕсли;;
	
	Возврат РезультатДата;

КонецФункции // ПолучитьДатуПервойНеЗакрытойСмены()
 

// Возвращает список содержащий ссылки на все незакрытые кассовые смены в 1С
// Предпологается, что данные по закрытым сменам не изменны и не рубуют корректировки
//
// Возвращаемое значение:
//   СписокЗначений  - Список значений содержащий ссылки на не закрытые документы кассовой смены
//
Функция ПолучитьСписокНеЗакрытыхКассовыхСменВ1С()
	
	
	СписокКассовыхСмен = Новый СписокЗначений;
	Статус = Перечисления.СтатусыКассовойСмены.Открыта;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		""ВЫБРАТЬ
		|	КассоваяСмена.НомерСменыККТ КАК НомерСменыККТ
		|ИЗ
		|	Документ.КассоваяСмена КАК КассоваяСмена
		|ГДЕ
		|	КассоваяСмена.Статус = &Статус
		|
		|УПОРЯДОЧИТЬ ПО
		|	КассоваяСмена.Дата"";
	
	Запрос.УстановитьПараметр(""Статус"", Статус);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	СписокКассовыхСмен.ЗагрузитьЗначения(РезультатЗапроса.ВыгрузитьКолонку(""НомерСменыККТ""));
	
	Возврат СписокКассовыхСмен;

КонецФункции // ПолучитьСписокНеЗакрытыхКассовыхСменВ1С()
 

// В функции происходит попытка закрытия кассовой смены, если документ не найден , то возвращается Неопределено
Функция ЗакрытьКассовуюСмену(РезультатКассоваяСмена);
	
	Результат = Неопределено;

	ТекущаяКассоваяСмена = Документы.КассоваяСмена.НайтиПоНомеру(РезультатКассоваяСмена.shiftnum);
	
	      Если НЕ ТекущаяКассоваяСмена = Неопределено Тогда
		  
		  	
		  Результат = ТекущаяКассоваяСмена;  
		  КонецЕсли; 
	   Возврат Результат;

КонецФункции	",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",3f6ef291-5a23-4f1e-855b-5c023164cc23}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxvdXRwdXRQ
YXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,1,
{9,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗагрузитьКассовыеСмены",
{1,1,
{"ru","Загрузить кассовые смены"}
},
{1,1,
{"ru","Загрузить кассовые смены"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗагрузитьКассовыеСмены",3,0,0,
{0,0},1,0,1,0,0,2}
},
{0,0},
{0,0},0,0}